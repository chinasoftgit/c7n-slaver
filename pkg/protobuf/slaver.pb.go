// Code generated by protoc-gen-go. DO NOT EDIT.
// source: slaver.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Check struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Schema               string   `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Port                 int32    `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Check) Reset()         { *m = Check{} }
func (m *Check) String() string { return proto.CompactTextString(m) }
func (*Check) ProtoMessage()    {}
func (*Check) Descriptor() ([]byte, []int) {
	return fileDescriptor_slaver_2cecf0c1fb75b97c, []int{0}
}
func (m *Check) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Check.Unmarshal(m, b)
}
func (m *Check) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Check.Marshal(b, m, deterministic)
}
func (dst *Check) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Check.Merge(dst, src)
}
func (m *Check) XXX_Size() int {
	return xxx_messageInfo_Check.Size(m)
}
func (m *Check) XXX_DiscardUnknown() {
	xxx_messageInfo_Check.DiscardUnknown(m)
}

var xxx_messageInfo_Check proto.InternalMessageInfo

func (m *Check) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Check) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Check) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *Check) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Result struct {
	// The name of the feature.
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_slaver_2cecf0c1fb75b97c, []int{1}
}
func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (dst *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(dst, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Check)(nil), "proto.Check")
	proto.RegisterType((*Result)(nil), "proto.Result")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouteCallClient is the client API for RouteCall service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouteCallClient interface {
	CheckHealth(ctx context.Context, in *Check, opts ...grpc.CallOption) (*Result, error)
}

type routeCallClient struct {
	cc *grpc.ClientConn
}

func NewRouteCallClient(cc *grpc.ClientConn) RouteCallClient {
	return &routeCallClient{cc}
}

func (c *routeCallClient) CheckHealth(ctx context.Context, in *Check, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/proto.RouteCall/CheckHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouteCallServer is the server API for RouteCall service.
type RouteCallServer interface {
	CheckHealth(context.Context, *Check) (*Result, error)
}

func RegisterRouteCallServer(s *grpc.Server, srv RouteCallServer) {
	s.RegisterService(&_RouteCall_serviceDesc, srv)
}

func _RouteCall_CheckHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Check)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteCallServer).CheckHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RouteCall/CheckHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteCallServer).CheckHealth(ctx, req.(*Check))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouteCall_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RouteCall",
	HandlerType: (*RouteCallServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckHealth",
			Handler:    _RouteCall_CheckHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "slaver.proto",
}

func init() { proto.RegisterFile("slaver.proto", fileDescriptor_slaver_2cecf0c1fb75b97c) }

var fileDescriptor_slaver_2cecf0c1fb75b97c = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0xb1, 0xaf, 0x82, 0x30,
	0x10, 0xc6, 0x1f, 0xef, 0x01, 0x4f, 0x4e, 0x5c, 0x3a, 0x98, 0xc6, 0x89, 0x30, 0x31, 0x18, 0x06,
	0x9d, 0x4c, 0xdc, 0x58, 0x9c, 0xbb, 0x3a, 0xd5, 0xe6, 0x62, 0x13, 0x4b, 0x4a, 0xb8, 0x62, 0xe2,
	0x7f, 0x6f, 0x7a, 0xc0, 0xd4, 0xef, 0xf7, 0xeb, 0x25, 0xdf, 0x1d, 0x94, 0xe4, 0xf4, 0x1b, 0xc7,
	0x76, 0x18, 0x7d, 0xf0, 0x22, 0xe3, 0xa7, 0xbe, 0x43, 0xd6, 0x59, 0x34, 0x2f, 0x21, 0x20, 0x0d,
	0x9f, 0x01, 0x65, 0x52, 0x25, 0x4d, 0xa1, 0x38, 0x47, 0x67, 0x3d, 0x05, 0xf9, 0x3b, 0xbb, 0x98,
	0xc5, 0x1e, 0x72, 0x32, 0x16, 0x7b, 0x2d, 0xff, 0xd8, 0x2e, 0x14, 0x67, 0x07, 0x3f, 0x06, 0x99,
	0x56, 0x49, 0x93, 0x29, 0xce, 0xf5, 0x15, 0x72, 0x85, 0x34, 0xb9, 0x20, 0x24, 0xfc, 0xd3, 0x64,
	0x0c, 0x12, 0x71, 0xc1, 0x46, 0xad, 0x18, 0x7f, 0x7a, 0x24, 0xd2, 0x4f, 0x5c, 0x6a, 0x56, 0x3c,
	0x5d, 0xa0, 0x50, 0x7e, 0x0a, 0xd8, 0x69, 0xe7, 0xc4, 0x11, 0xb6, 0xbc, 0xe7, 0x0d, 0xb5, 0x0b,
	0x56, 0x94, 0xf3, 0x15, 0x2d, 0xbb, 0xc3, 0x6e, 0xa1, 0xb9, 0xac, 0xfe, 0x79, 0xe4, 0xcc, 0xe7,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x59, 0x8d, 0xf3, 0x8e, 0xf3, 0x00, 0x00, 0x00,
}
